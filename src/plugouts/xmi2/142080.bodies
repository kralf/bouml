class UmlBaseActivityObject
!!!187520.cpp!!!	create(inout parent : UmlItem, inout s : str) : UmlActivityObject
  return (UmlActivityObject *) parent->create_(anActivityObject, s);
!!!187520.java!!!	create(inout parent : UmlItem, inout s : str) : UmlActivityObject
  return (UmlActivityObject) parent.create_(anItemKind.anActivityObject, s);
!!!187648.cpp!!!	kind() : anItemKind
  return anActivityObject;
!!!187648.java!!!	kind() : anItemKind
  return anItemKind.anActivityObject;
!!!188032.cpp!!!	type() : UmlTypeSpec
  read_if_needed_();
  return _type;
!!!188032.java!!!	type() : UmlTypeSpec
  read_if_needed_();
  return _type;
!!!188160.cpp!!!	set_Type(in v : UmlTypeSpec) : bool
  return set_it_(_type, v, setTypeCmd);
!!!188160.java!!!	set_Type(in v : UmlTypeSpec) : bool
  UmlCom.send_cmd(identifier_(), OnInstanceCmd.setTypeCmd, v);
  UmlCom.check();

  _type = v;
!!!188288.cpp!!!	multiplicity() : string
  read_if_needed_();
  return _multiplicity;
!!!188288.java!!!	multiplicity() : string
  read_if_needed_();
  return _multiplicity;
!!!188416.cpp!!!	set_Multiplicity(in v : str) : bool
  return set_it_(_multiplicity, v, setMultiplicityCmd);
!!!188416.java!!!	set_Multiplicity(in v : str) : bool
  UmlCom.send_cmd(identifier_(), OnInstanceCmd.setMultiplicityCmd, v);
  UmlCom.check();

  _multiplicity = v;
!!!188544.cpp!!!	inState() : string
  read_if_needed_();
  return _in_state;
!!!188544.java!!!	inState() : string
  read_if_needed_();
  return _in_state;
!!!188672.cpp!!!	set_InState(in v : str) : bool
  return set_it_(_in_state, v, setInStateCmd);
!!!188672.java!!!	set_InState(in v : str) : bool
  UmlCom.send_cmd(identifier_(), OnInstanceCmd.setInStateCmd, v);
  UmlCom.check();

  _in_state = v;
!!!188800.cpp!!!	selection() : string
  read_if_needed_();
  return _selection;
!!!188800.java!!!	selection() : string
  read_if_needed_();
  return _selection;
!!!188928.cpp!!!	set_Selection(in v : str) : bool
  return set_it_(_selection, v, setUmlActivityCmd);
!!!188928.java!!!	set_Selection(in v : str) : bool
  UmlCom.send_cmd(identifier_(), OnInstanceCmd.setUmlActivityCmd, v);
  UmlCom.check();

  _selection = v;
!!!189056.cpp!!!	cppSelection() : string
  read_if_needed_();
  return _cpp_selection;
!!!189056.java!!!	cppSelection() : string
  read_if_needed_();
  return _cpp_selection;
!!!189184.cpp!!!	set_CppSelection(in v : str) : bool
  return set_it_(_cpp_selection, v, setCppActivityCmd);
!!!189184.java!!!	set_CppSelection(in v : str) : bool
  UmlCom.send_cmd(identifier_(), OnInstanceCmd.setCppActivityCmd, v);
  UmlCom.check();

  _cpp_selection = v;
!!!189312.cpp!!!	javaSelection() : string
  read_if_needed_();
  return _java_selection;
!!!189312.java!!!	javaSelection() : string
  read_if_needed_();
  return _java_selection;
!!!189440.cpp!!!	set_JavaSelection(in v : str) : bool
  return set_it_(_java_selection, v, setJavaActivityCmd);
!!!189440.java!!!	set_JavaSelection(in v : str) : bool
  UmlCom.send_cmd(identifier_(), OnInstanceCmd.setJavaActivityCmd, v);
  UmlCom.check();

  _java_selection = v;
!!!189568.cpp!!!	ordering() : anOrdering
  read_if_needed_();
  return _ordering;
!!!189568.java!!!	ordering() : anOrdering
  read_if_needed_();
  return _ordering;
!!!189696.cpp!!!	set_Ordering(in v : anOrdering) : bool
  UmlCom::send_cmd(_identifier, setOrderingCmd, (char) v);   if (UmlCom::read_bool()) {     _ordering = v;     return TRUE;   }   else     return FALSE;
!!!189696.java!!!	set_Ordering(in v : anOrdering) : bool
  UmlCom.send_cmd(identifier_(), OnInstanceCmd.setOrderingCmd, (byte) v.value());
  UmlCom.check();

  _ordering = v;
!!!189824.cpp!!!	isControlType() : bool
  read_if_needed_();
  return _is_control;
!!!189824.java!!!	isControlType() : bool
  read_if_needed_();
  return _is_control;
!!!189952.cpp!!!	set_IsControlType(in v : bool) : bool
  bool vv;

  if (set_it_(vv, v, setFlagCmd)) {
    _is_control = v;
    return TRUE;
  }
  else
    return FALSE;
!!!189952.java!!!	set_IsControlType(in v : bool) : bool
  UmlCom.send_cmd(identifier_(), OnInstanceCmd.setFlagCmd, (v) ? 1 : 0);
  UmlCom.check();

  _is_control = v;
!!!190080.cpp!!!	associatedDiagram() : UmlActivityDiagram
  read_if_needed_();

  return _assoc_diagram;
!!!190080.java!!!	associatedDiagram() : UmlActivityDiagram
  read_if_needed_();

  return _assoc_diagram;
!!!190208.cpp!!!	set_AssociatedDiagram(in d : UmlActivityDiagram) : bool
  UmlCom::send_cmd(_identifier, setAssocDiagramCmd, (d == 0) ? (void *) 0 : ((UmlBaseItem *) d)->_identifier);
  if (UmlCom::read_bool()) {
    _assoc_diagram = d;
    return TRUE;
  }
  else
    return FALSE;
!!!190208.java!!!	set_AssociatedDiagram(in d : UmlActivityDiagram) : bool
  UmlCom.send_cmd(identifier_(), OnInstanceCmd.setAssocDiagramCmd, (d == null) ? (long) 0 : d.identifier_());
  UmlCom.check();
  _assoc_diagram = d;
!!!190336.cpp!!!	unload(in rec : bool, in del : bool) : void
  _type.explicit_type = 0;
  _multiplicity = 0;
  _in_state = 0;
  _selection = 0;
#ifdef WINCPP
  _cpp_selection = 0;
#endif
#ifdef WITHJAVA
  _java_selection = 0;
#endif
  UmlBaseActivityNode::unload(rec, del);
!!!190336.java!!!	unload(in rec : bool, in del : bool) : void
  _type = null;
  _multiplicity = null;
  _in_state = null;
  _selection = null;
  _cpp_selection = null;
  _java_selection = null;
  super.unload(rec, del);
!!!190464.cpp!!!	read_uml_() : void
  _assoc_diagram = (kind() == anActivityObject) ? (UmlActivityDiagram *) UmlBaseItem::read_() : (UmlActivityDiagram *) 0;
  UmlBaseActivityNode::read_uml_();
  _type.type = (UmlClass *) UmlBaseItem::read_();
  if (_type.type == 0)
    _type.explicit_type = UmlCom::read_string();
  _multiplicity = UmlCom::read_string();
  _in_state = UmlCom::read_string();
  _selection = UmlCom::read_string();
  _ordering = (anOrdering) UmlCom::read_char();
  _is_control = UmlCom::read_bool();
!!!190464.java!!!	read_uml_() : void
  _assoc_diagram = (kind() == anItemKind.anActivityObject) ? (UmlActivityDiagram) UmlBaseItem.read_() : null;
  super.read_uml_();
  _type = new UmlTypeSpec();
  _type.type = (UmlClass) UmlBaseItem.read_();
  if (_type.type == null)
    _type.explicit_type = UmlCom.read_string();
  _multiplicity = UmlCom.read_string();
  _in_state = UmlCom.read_string();
  _selection = UmlCom.read_string();
  _ordering = anOrdering.fromInt(UmlCom.read_char());
  _is_control = UmlCom.read_bool();
!!!190592.cpp!!!	read_cpp_() : void
  _cpp_selection = UmlCom::read_string();
!!!190592.java!!!	read_cpp_() : void
  _cpp_selection  = UmlCom.read_string();
!!!190720.cpp!!!	read_java_() : void
  _java_selection = UmlCom::read_string();
!!!190720.java!!!	read_java_() : void
  _java_selection = UmlCom.read_string();
