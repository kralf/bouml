class UmlBaseUseCase
!!!65152.cpp!!!	create(inout parent : UmlItem, in s : str) : UmlUseCase
  return (UmlUseCase *) parent->create_(anUseCase, s);
!!!65152.java!!!	create(inout parent : UmlItem, in s : str) : UmlUseCase
  return (UmlUseCase) parent.create_(anItemKind.anUseCase, s);
!!!65280.cpp!!!	kind() : anItemKind
  return anUseCase;
!!!65280.java!!!	kind() : anItemKind
  return anItemKind.anUseCase;
!!!65408.cpp!!!	associatedDiagram() : UmlUseCaseDiagram
  read_if_needed_();
  
  return _assoc_diagram;
!!!65408.java!!!	associatedDiagram() : UmlUseCaseDiagram
  read_if_needed_();
  
  return _assoc_diagram;
!!!65536.cpp!!!	set_AssociatedDiagram(inout d : UmlUseCaseDiagram) : bool
  UmlCom::send_cmd(_identifier, setAssocDiagramCmd, ((UmlBaseItem *) d)->_identifier);
  if (UmlCom::read_bool()) {
    _assoc_diagram = d;
    return TRUE;
  }
  else
    return FALSE;
!!!65536.java!!!	set_AssociatedDiagram(inout d : UmlUseCaseDiagram) : bool
  UmlCom.send_cmd(identifier_(), OnInstanceCmd.setAssocDiagramCmd, d.identifier_());
  UmlCom.check();
  
  _assoc_diagram = d;

!!!65664.cpp!!!	read_uml_() : void
  _assoc_diagram = (UmlUseCaseDiagram *) UmlBaseItem::read_();
  UmlBaseItem::read_uml_();
!!!65664.java!!!	read_uml_() : void
  _assoc_diagram = (UmlUseCaseDiagram) UmlBaseItem.read_();
  super.read_uml_();
